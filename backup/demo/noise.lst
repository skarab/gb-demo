                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module noise
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl b_Scene_Noise
                                     12 	.globl _Scene_Noise
                                     13 	.globl _noise_lcd
                                     14 	.globl _noise_vbl
                                     15 	.globl _set_palette
                                     16 	.globl _set_bkg_data
                                     17 	.globl _get_bkg_xy_addr
                                     18 	.globl _display_off
                                     19 	.globl _set_interrupts
                                     20 	.globl _disable_interrupts
                                     21 	.globl _enable_interrupts
                                     22 	.globl _mode
                                     23 	.globl _add_LCD
                                     24 	.globl _add_VBL
                                     25 	.globl _remove_LCD
                                     26 	.globl _remove_VBL
                                     27 	.globl _noise_scanline_offsets
                                     28 	.globl _noise_scanline
                                     29 	.globl _noise
                                     30 	.globl _noise_pos
                                     31 	.globl _noise_y
                                     32 	.globl _noise_output
                                     33 	.globl _noise_scanline_offsets_tbl
                                     34 	.globl ___bank_noise
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _DATA
      000000                         42 _noise_output::
      000000                         43 	.ds 720
      0002D0                         44 _noise_y::
      0002D0                         45 	.ds 1
      0002D1                         46 _noise_pos::
      0002D1                         47 	.ds 2
      0002D3                         48 _noise::
      0002D3                         49 	.ds 1
      0002D4                         50 _noise_scanline::
      0002D4                         51 	.ds 1
      0002D5                         52 _noise_scanline_offsets::
      0002D5                         53 	.ds 2
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area _DABS (ABS)
                                     58 ;--------------------------------------------------------
                                     59 ; global & static initialisations
                                     60 ;--------------------------------------------------------
                                     61 	.area _HOME
                                     62 	.area _GSINIT
                                     63 	.area _GSFINAL
                                     64 	.area _GSINIT
                                     65 ;src\noise.c:11: UINT8 noise_y = 0;
      000000 21rD0r02                66 	ld	hl, #_noise_y
      000003 36 00                   67 	ld	(hl), #0x00
                                     68 ;src\noise.c:12: UINT8** noise_pos = noise_output+20;
      000005 21rD1r02                69 	ld	hl, #_noise_pos
      000008 36r28                   70 	ld	(hl), #<((_noise_output + 0x0028))
      00000A 23                      71 	inc	hl
      00000B 36s00                   72 	ld	(hl), #>((_noise_output + 0x0028))
                                     73 ;src\noise.c:13: UINT8 noise = 0;
      00000D 21rD3r02                74 	ld	hl, #_noise
      000010 36 00                   75 	ld	(hl), #0x00
                                     76 ;src\noise.c:14: UINT8 noise_scanline = 0;
      000012 21rD4r02                77 	ld	hl, #_noise_scanline
      000015 36 00                   78 	ld	(hl), #0x00
                                     79 ;src\noise.c:16: const UBYTE* noise_scanline_offsets = noise_scanline_offsets_tbl;
      000017 21rD5r02                80 	ld	hl, #_noise_scanline_offsets
      00001A 36r13                   81 	ld	(hl), #<(_noise_scanline_offsets_tbl)
      00001C 23                      82 	inc	hl
      00001D 36s00                   83 	ld	(hl), #>(_noise_scanline_offsets_tbl)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area _HOME
                                     88 	.area _HOME
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area _CODE_4
                                     93 ;src\noise.c:18: void noise_vbl()
                                     94 ;	---------------------------------
                                     95 ; Function noise_vbl
                                     96 ; ---------------------------------
      000000                         97 _noise_vbl::
                                     98 ;src\noise.c:20: noise_pos = noise_output+(20*2+2);
      000000 21rD1r02                99 	ld	hl, #_noise_pos
      000003 3Er54                  100 	ld	a, #<((_noise_output + 0x0054))
      000005 22                     101 	ld	(hl+), a
      000006 36s00                  102 	ld	(hl), #>((_noise_output + 0x0054))
                                    103 ;src\noise.c:21: noise_y = 0;
      000008 21rD0r02               104 	ld	hl, #_noise_y
      00000B 36 00                  105 	ld	(hl), #0x00
                                    106 ;src\noise.c:22: noise_scanline = 0;
      00000D 21rD4r02               107 	ld	hl, #_noise_scanline
      000010 36 00                  108 	ld	(hl), #0x00
                                    109 ;src\noise.c:23: }
      000012 C9                     110 	ret
                           000004   111 ___bank_noise	=	0x0004
      000013                        112 _noise_scanline_offsets_tbl:
      000013 00                     113 	.db #0x00	; 0
      000014 01                     114 	.db #0x01	; 1
      000015 02                     115 	.db #0x02	; 2
      000016 03                     116 	.db #0x03	; 3
      000017 03                     117 	.db #0x03	; 3
      000018 02                     118 	.db #0x02	; 2
      000019 01                     119 	.db #0x01	; 1
      00001A 00                     120 	.db #0x00	; 0
      00001B 00                     121 	.db #0x00	; 0
      00001C 01                     122 	.db #0x01	; 1
      00001D 02                     123 	.db #0x02	; 2
      00001E 03                     124 	.db #0x03	; 3
      00001F 03                     125 	.db #0x03	; 3
      000020 02                     126 	.db #0x02	; 2
      000021 01                     127 	.db #0x01	; 1
      000022 00                     128 	.db #0x00	; 0
                                    129 ;src\noise.c:25: void noise_lcd()
                                    130 ;	---------------------------------
                                    131 ; Function noise_lcd
                                    132 ; ---------------------------------
      000023                        133 _noise_lcd::
      000023 3B                     134 	dec	sp
                                    135 ;src\noise.c:27: SCX_REG = (noise_scanline_offsets[noise_scanline & (UBYTE)7]+1)*2;
      000024 FArD4r02               136 	ld	a, (#_noise_scanline)
      000027 E6 07                  137 	and	a, #0x07
      000029 4F                     138 	ld	c, a
      00002A 21rD5r02               139 	ld	hl, #_noise_scanline_offsets
      00002D 7E                     140 	ld	a, (hl)
      00002E 81                     141 	add	a, c
      00002F 4F                     142 	ld	c, a
      000030 23                     143 	inc	hl
      000031 7E                     144 	ld	a, (hl)
      000032 CE 00                  145 	adc	a, #0x00
      000034 47                     146 	ld	b, a
      000035 0A                     147 	ld	a, (bc)
      000036 3C                     148 	inc	a
      000037 87                     149 	add	a, a
      000038 E0r00                  150 	ldh	(_SCX_REG+0),a
                                    151 ;src\noise.c:29: for (UINT8 i=noise_scanline ; i<=LY_REG ; ++i)
      00003A FArD4r02               152 	ld	a, (#_noise_scanline)
      00003D F8 00                  153 	ldhl	sp,	#0
      00003F 77                     154 	ld	(hl), a
      000040                        155 00110$:
      000040 F0r00                  156 	ldh	a, (_LY_REG+0)
      000042 F8 00                  157 	ldhl	sp,	#0
      000044 96                     158 	sub	a, (hl)
      000045 38 73                  159 	jr	C, 00112$
                                    160 ;src\noise.c:31: UINT8 old = noise_y;
      000047 21rD0r02               161 	ld	hl, #_noise_y
      00004A 4E                     162 	ld	c, (hl)
                                    163 ;src\noise.c:32: noise_y = noise_scanline>>3;
      00004B FArD4r02               164 	ld	a, (#_noise_scanline)
      00004E CB 37                  165 	swap	a
      000050 07                     166 	rlca
      000051 E6 1F                  167 	and	a, #0x1f
      000053 EArD0r02               168 	ld	(#_noise_y),a
                                    169 ;src\noise.c:33: ++noise_scanline;
      000056 21rD4r02               170 	ld	hl, #_noise_scanline
      000059 34                     171 	inc	(hl)
                                    172 ;src\noise.c:35: if (noise_y!=old)
      00005A FArD0r02               173 	ld	a, (#_noise_y)
      00005D 91                     174 	sub	a, c
      00005E 28 1C                  175 	jr	Z, 00105$
                                    176 ;src\noise.c:37: if (noise_y==10)
      000060 FArD0r02               177 	ld	a, (#_noise_y)
      000063 D6 0A                  178 	sub	a, #0x0a
      000065 20 0A                  179 	jr	NZ, 00102$
                                    180 ;src\noise.c:39: noise_pos = noise_output+2;
      000067 21rD1r02               181 	ld	hl, #_noise_pos
      00006A 3Er04                  182 	ld	a, #<((_noise_output + 0x0004))
      00006C 22                     183 	ld	(hl+), a
      00006D 36s00                  184 	ld	(hl), #>((_noise_output + 0x0004))
      00006F 18 0B                  185 	jr	00105$
      000071                        186 00102$:
                                    187 ;src\noise.c:43: noise_pos += 4;
      000071 21rD1r02               188 	ld	hl, #_noise_pos
      000074 7E                     189 	ld	a, (hl)
      000075 C6 08                  190 	add	a, #0x08
      000077 22                     191 	ld	(hl+), a
      000078 7E                     192 	ld	a, (hl)
      000079 CE 00                  193 	adc	a, #0x00
      00007B 77                     194 	ld	(hl), a
      00007C                        195 00105$:
                                    196 ;src\noise.c:47: if (noise_y<9)
      00007C FArD0r02               197 	ld	a, (#_noise_y)
      00007F D6 09                  198 	sub	a, #0x09
      000081 30 32                  199 	jr	NC, 00111$
                                    200 ;src\noise.c:49: **noise_pos = noise;
      000083 21rD2r02               201 	ld	hl, #_noise_pos + 1
      000086 2B                     202 	dec	hl
      000087 2A                     203 	ld	a, (hl+)
      000088 4F                     204 	ld	c, a
      000089 46                     205 	ld	b, (hl)
      00008A 69                     206 	ld	l, c
      00008B 60                     207 	ld	h, b
      00008C 2A                     208 	ld	a, (hl+)
      00008D 4F                     209 	ld	c, a
      00008E 46                     210 	ld	b, (hl)
      00008F FArD3r02               211 	ld	a, (#_noise)
      000092 02                     212 	ld	(bc), a
                                    213 ;src\noise.c:50: ++noise_pos;
      000093 21rD1r02               214 	ld	hl, #_noise_pos
      000096 7E                     215 	ld	a, (hl)
      000097 C6 02                  216 	add	a, #0x02
      000099 22                     217 	ld	(hl+), a
      00009A 7E                     218 	ld	a, (hl)
      00009B CE 00                  219 	adc	a, #0x00
                                    220 ;src\noise.c:51: **noise_pos = noise;
      00009D 32                     221 	ld	(hl-), a
      00009E 2A                     222 	ld	a, (hl+)
      00009F 4F                     223 	ld	c, a
      0000A0 46                     224 	ld	b, (hl)
      0000A1 69                     225 	ld	l, c
      0000A2 60                     226 	ld	h, b
      0000A3 2A                     227 	ld	a, (hl+)
      0000A4 4F                     228 	ld	c, a
      0000A5 46                     229 	ld	b, (hl)
      0000A6 FArD3r02               230 	ld	a, (#_noise)
      0000A9 02                     231 	ld	(bc), a
                                    232 ;src\noise.c:52: ++noise_pos;
      0000AA 21rD1r02               233 	ld	hl, #_noise_pos
      0000AD 7E                     234 	ld	a, (hl)
      0000AE C6 02                  235 	add	a, #0x02
      0000B0 22                     236 	ld	(hl+), a
      0000B1 7E                     237 	ld	a, (hl)
      0000B2 CE 00                  238 	adc	a, #0x00
      0000B4 77                     239 	ld	(hl), a
      0000B5                        240 00111$:
                                    241 ;src\noise.c:29: for (UINT8 i=noise_scanline ; i<=LY_REG ; ++i)
      0000B5 F8 00                  242 	ldhl	sp,	#0
      0000B7 34                     243 	inc	(hl)
      0000B8 18 86                  244 	jr	00110$
      0000BA                        245 00112$:
                                    246 ;src\noise.c:55: }
      0000BA 33                     247 	inc	sp
      0000BB C9                     248 	ret
                                    249 ;src\noise.c:57: void Scene_Noise() BANKED
                                    250 ;	---------------------------------
                                    251 ; Function Scene_Noise
                                    252 ; ---------------------------------
                           000004   253 	b_Scene_Noise	= 4
      0000BC                        254 _Scene_Noise::
      0000BC E8 F5                  255 	add	sp, #-11
                                    256 ;src\noise.c:61: mode(M_TEXT_OUT);
      0000BE 3E 02                  257 	ld	a, #0x02
      0000C0 F5                     258 	push	af
      0000C1 33                     259 	inc	sp
      0000C2 CDr00r00               260 	call	_mode
      0000C5 33                     261 	inc	sp
                                    262 ;src\noise.c:63: disable_interrupts();
      0000C6 CDr00r00               263 	call	_disable_interrupts
                                    264 ;src\noise.c:64: DISPLAY_OFF;
      0000C9 CDr00r00               265 	call	_display_off
                                    266 ;src\noise.c:65: set_palette(PALETTE(CBLACK, CGRAY, CSILVER, CWHITE));
      0000CC 21 1B 00               267 	ld	hl, #0x001b
      0000CF E5                     268 	push	hl
      0000D0 CDr00r00               269 	call	_set_palette
      0000D3 E8 02                  270 	add	sp, #2
                                    271 ;src\noise.c:66: set_bkg_data(0, 32, fire_tiles_tiledata);
      0000D5 21r00r00               272 	ld	hl, #_fire_tiles_tiledata
      0000D8 E5                     273 	push	hl
      0000D9 3E 20                  274 	ld	a, #0x20
      0000DB F5                     275 	push	af
      0000DC 33                     276 	inc	sp
      0000DD AF                     277 	xor	a, a
      0000DE F5                     278 	push	af
      0000DF 33                     279 	inc	sp
      0000E0 CDr00r00               280 	call	_set_bkg_data
      0000E3 E8 04                  281 	add	sp, #4
                                    282 ;src\noise.c:69: for (y=0 ; y!=18 ; ++y)
      0000E5 AF                     283 	xor	a, a
      0000E6 F8 07                  284 	ldhl	sp,	#7
      0000E8 22                     285 	ld	(hl+), a
      0000E9 77                     286 	ld	(hl), a
      0000EA AF                     287 	xor	a, a
      0000EB 23                     288 	inc	hl
      0000EC 77                     289 	ld	(hl), a
                                    290 ;src\noise.c:71: for (x=0 ; x!=20 ; ++x)
      0000ED                        291 00120$:
      0000ED F8 07                  292 	ldhl	sp,	#7
      0000EF 3A                     293 	ld	a, (hl-)
      0000F0 2B                     294 	dec	hl
      0000F1 77                     295 	ld	(hl), a
      0000F2 F8 08                  296 	ldhl	sp,	#8
      0000F4 3A                     297 	ld	a, (hl-)
      0000F5 2B                     298 	dec	hl
      0000F6 32                     299 	ld	(hl-), a
      0000F7 CB 26                  300 	sla	(hl)
      0000F9 23                     301 	inc	hl
      0000FA CB 16                  302 	rl	(hl)
                                    303 ;c
      0000FC 2B                     304 	dec	hl
      0000FD 2A                     305 	ld	a, (hl+)
      0000FE 5F                     306 	ld	e, a
      0000FF 56                     307 	ld	d, (hl)
      000100 21r00r00               308 	ld	hl, #_noise_output
      000103 19                     309 	add	hl, de
      000104 33                     310 	inc	sp
      000105 33                     311 	inc	sp
      000106 E5                     312 	push	hl
      000107 F8 00                  313 	ldhl	sp,	#0
      000109 2A                     314 	ld	a, (hl+)
      00010A 5E                     315 	ld	e, (hl)
      00010B 23                     316 	inc	hl
      00010C 22                     317 	ld	(hl+), a
      00010D 73                     318 	ld	(hl), e
      00010E F8 09                  319 	ldhl	sp,	#9
      000110 7E                     320 	ld	a, (hl)
      000111 D6 0C                  321 	sub	a, #0x0c
      000113 3E 01                  322 	ld	a, #0x01
      000115 28 01                  323 	jr	Z, 00167$
      000117 AF                     324 	xor	a, a
      000118                        325 00167$:
      000118 F8 04                  326 	ldhl	sp,	#4
      00011A 77                     327 	ld	(hl), a
      00011B AF                     328 	xor	a, a
      00011C F8 0A                  329 	ldhl	sp,	#10
      00011E 77                     330 	ld	(hl), a
      00011F                        331 00111$:
                                    332 ;src\noise.c:73: *(noise_output+oy+x) = get_bkg_xy_addr(x, y);
      00011F F8 0A                  333 	ldhl	sp,	#10
      000121 7E                     334 	ld	a, (hl)
      000122 F8 05                  335 	ldhl	sp,	#5
      000124 77                     336 	ld	(hl), a
      000125 AF                     337 	xor	a, a
      000126 23                     338 	inc	hl
      000127 32                     339 	ld	(hl-), a
      000128 CB 26                  340 	sla	(hl)
      00012A 23                     341 	inc	hl
      00012B CB 16                  342 	rl	(hl)
                                    343 ;c
      00012D F8 02                  344 	ldhl	sp,#2
      00012F 2A                     345 	ld	a, (hl+)
      000130 5F                     346 	ld	e, a
      000131 2A                     347 	ld	a, (hl+)
      000132 57                     348 	ld	d, a
      000133 23                     349 	inc	hl
      000134 2A                     350 	ld	a, (hl+)
      000135 66                     351 	ld	h, (hl)
      000136 6F                     352 	ld	l, a
      000137 19                     353 	add	hl, de
      000138 4D                     354 	ld	c, l
      000139 44                     355 	ld	b, h
      00013A F8 09                  356 	ldhl	sp,	#9
      00013C 7E                     357 	ld	a, (hl)
      00013D F5                     358 	push	af
      00013E 33                     359 	inc	sp
      00013F 23                     360 	inc	hl
      000140 7E                     361 	ld	a, (hl)
      000141 F5                     362 	push	af
      000142 33                     363 	inc	sp
      000143 CDr00r00               364 	call	_get_bkg_xy_addr
      000146 E8 02                  365 	add	sp, #2
      000148 69                     366 	ld	l, c
      000149 60                     367 	ld	h, b
      00014A 7B                     368 	ld	a, e
      00014B 22                     369 	ld	(hl+), a
      00014C 72                     370 	ld	(hl), d
                                    371 ;src\noise.c:75: if (y==12 && x>=2 && x<18)
      00014D F8 04                  372 	ldhl	sp,	#4
      00014F 7E                     373 	ld	a, (hl)
      000150 B7                     374 	or	a, a
      000151 28 19                  375 	jr	Z, 00102$
      000153 F8 0A                  376 	ldhl	sp,	#10
      000155 7E                     377 	ld	a, (hl)
      000156 D6 02                  378 	sub	a, #0x02
      000158 38 12                  379 	jr	C, 00102$
      00015A 7E                     380 	ld	a, (hl)
      00015B D6 12                  381 	sub	a, #0x12
      00015D 30 0D                  382 	jr	NC, 00102$
                                    383 ;src\noise.c:77: **(noise_output+oy+x) = 16+x-2;
      00015F 69                     384 	ld	l, c
      000160 60                     385 	ld	h, b
      000161 2A                     386 	ld	a, (hl+)
      000162 4F                     387 	ld	c, a
      000163 46                     388 	ld	b, (hl)
      000164 F8 0A                  389 	ldhl	sp,	#10
      000166 7E                     390 	ld	a, (hl)
      000167 C6 0E                  391 	add	a, #0x0e
      000169 02                     392 	ld	(bc), a
      00016A 18 0F                  393 	jr	00112$
      00016C                        394 00102$:
                                    395 ;src\noise.c:81: **(noise_output+oy+x) = 4;
                                    396 ;c
      00016C D1                     397 	pop	de
      00016D D5                     398 	push	de
      00016E F8 05                  399 	ldhl	sp,	#5
      000170 2A                     400 	ld	a, (hl+)
      000171 66                     401 	ld	h, (hl)
      000172 6F                     402 	ld	l, a
      000173 19                     403 	add	hl, de
      000174 2A                     404 	ld	a, (hl+)
      000175 4F                     405 	ld	c, a
      000176 7E                     406 	ld	a, (hl)
      000177 69                     407 	ld	l, c
      000178 67                     408 	ld	h, a
      000179 36 04                  409 	ld	(hl), #0x04
      00017B                        410 00112$:
                                    411 ;src\noise.c:71: for (x=0 ; x!=20 ; ++x)
      00017B F8 0A                  412 	ldhl	sp,	#10
      00017D 34                     413 	inc	(hl)
      00017E 7E                     414 	ld	a, (hl)
      00017F D6 14                  415 	sub	a, #0x14
      000181 20 9C                  416 	jr	NZ, 00111$
                                    417 ;src\noise.c:84: oy += 20;
                                    418 ;c
      000183 F8 07                  419 	ldhl	sp,#7
      000185 2A                     420 	ld	a, (hl+)
      000186 5F                     421 	ld	e, a
      000187 56                     422 	ld	d, (hl)
      000188 21 14 00               423 	ld	hl, #0x0014
      00018B 19                     424 	add	hl, de
      00018C E5                     425 	push	hl
      00018D 7D                     426 	ld	a, l
      00018E F8 09                  427 	ldhl	sp,	#9
      000190 77                     428 	ld	(hl), a
      000191 E1                     429 	pop	hl
      000192 7C                     430 	ld	a, h
      000193 F8 08                  431 	ldhl	sp,	#8
                                    432 ;src\noise.c:69: for (y=0 ; y!=18 ; ++y)
      000195 22                     433 	ld	(hl+), a
      000196 34                     434 	inc	(hl)
      000197 7E                     435 	ld	a, (hl)
      000198 D6 12                  436 	sub	a, #0x12
      00019A C2rEDr00               437 	jp	NZ,00120$
                                    438 ;src\noise.c:91: }
      00019D F3                     439 	di
                                    440 ;src\noise.c:88: STAT_REG = 0x18;
      00019E 3E 18                  441 	ld	a, #0x18
      0001A0 E0r00                  442 	ldh	(_STAT_REG+0),a
                                    443 ;src\noise.c:89: add_VBL(noise_vbl);
      0001A2 21r00r00               444 	ld	hl, #_noise_vbl
      0001A5 E5                     445 	push	hl
      0001A6 CDr00r00               446 	call	_add_VBL
      0001A9 E8 02                  447 	add	sp, #2
                                    448 ;src\noise.c:90: add_LCD(noise_lcd);
      0001AB 21r23r00               449 	ld	hl, #_noise_lcd
      0001AE E5                     450 	push	hl
      0001AF CDr00r00               451 	call	_add_LCD
      0001B2 E8 02                  452 	add	sp, #2
      0001B4 FB                     453 	ei
                                    454 ;src\noise.c:92: set_interrupts(LCD_IFLAG | VBL_IFLAG);
      0001B5 3E 03                  455 	ld	a, #0x03
      0001B7 F5                     456 	push	af
      0001B8 33                     457 	inc	sp
      0001B9 CDr00r00               458 	call	_set_interrupts
      0001BC 33                     459 	inc	sp
                                    460 ;src\noise.c:94: DISPLAY_ON;
      0001BD F0r00                  461 	ldh	a, (_LCDC_REG+0)
      0001BF F6 80                  462 	or	a, #0x80
      0001C1 E0r00                  463 	ldh	(_LCDC_REG+0),a
                                    464 ;src\noise.c:95: enable_interrupts();
      0001C3 CDr00r00               465 	call	_enable_interrupts
                                    466 ;src\noise.c:99: while (sync++<30)
      0001C6 01 00 00               467 	ld	bc, #0x0000
      0001C9                        468 00108$:
      0001C9 79                     469 	ld	a, c
      0001CA D6 1E                  470 	sub	a, #0x1e
      0001CC 78                     471 	ld	a, b
      0001CD 17                     472 	rla
      0001CE 3F                     473 	ccf
      0001CF 1F                     474 	rra
      0001D0 DE 80                  475 	sbc	a, #0x80
      0001D2 30 3B                  476 	jr	NC, 00110$
      0001D4 03                     477 	inc	bc
                                    478 ;src\noise.c:101: noise = (noise+1)%16;
      0001D5 21rD3r02               479 	ld	hl, #_noise
      0001D8 5E                     480 	ld	e, (hl)
      0001D9 16 00                  481 	ld	d, #0x00
      0001DB 13                     482 	inc	de
      0001DC C5                     483 	push	bc
      0001DD 21 10 00               484 	ld	hl, #0x0010
      0001E0 E5                     485 	push	hl
      0001E1 D5                     486 	push	de
      0001E2 CDr00r00               487 	call	__modsint
      0001E5 E8 04                  488 	add	sp, #4
      0001E7 C1                     489 	pop	bc
      0001E8 21rD3r02               490 	ld	hl, #_noise
      0001EB 73                     491 	ld	(hl), e
                                    492 ;src\noise.c:102: noise_scanline_offsets = &noise_scanline_offsets_tbl[(UBYTE)(sys_time >> 2) & 0x07u];
      0001EC 21r01r00               493 	ld	hl, #_sys_time + 1
      0001EF 2B                     494 	dec	hl
      0001F0 2A                     495 	ld	a, (hl+)
      0001F1 5F                     496 	ld	e, a
      0001F2 56                     497 	ld	d, (hl)
      0001F3 CB 3A                  498 	srl	d
      0001F5 CB 1B                  499 	rr	e
      0001F7 CB 3A                  500 	srl	d
      0001F9 CB 1B                  501 	rr	e
      0001FB 7B                     502 	ld	a, e
      0001FC E6 07                  503 	and	a, #0x07
      0001FE 5F                     504 	ld	e, a
      0001FF 16 00                  505 	ld	d, #0x00
      000201 21r13r00               506 	ld	hl, #_noise_scanline_offsets_tbl
      000204 19                     507 	add	hl, de
      000205 7D                     508 	ld	a, l
      000206 EArD5r02               509 	ld	(_noise_scanline_offsets), a
      000209 7C                     510 	ld	a, h
      00020A EArD6r02               511 	ld	(_noise_scanline_offsets + 1), a
      00020D 18 BA                  512 	jr	00108$
      00020F                        513 00110$:
                                    514 ;src\noise.c:106: disable_interrupts();
      00020F CDr00r00               515 	call	_disable_interrupts
                                    516 ;src\noise.c:107: DISPLAY_OFF;
      000212 CDr00r00               517 	call	_display_off
                                    518 ;src\noise.c:114: }
      000215 F3                     519 	di
                                    520 ;src\noise.c:110: remove_LCD(noise_lcd);
      000216 21r23r00               521 	ld	hl, #_noise_lcd
      000219 E5                     522 	push	hl
      00021A CDr00r00               523 	call	_remove_LCD
      00021D E8 02                  524 	add	sp, #2
                                    525 ;src\noise.c:111: remove_VBL(noise_vbl);
      00021F 21r00r00               526 	ld	hl, #_noise_vbl
      000222 E5                     527 	push	hl
      000223 CDr00r00               528 	call	_remove_VBL
      000226 E8 02                  529 	add	sp, #2
                                    530 ;src\noise.c:112: SCX_REG = 0;
      000228 3E 00                  531 	ld	a, #0x00
      00022A E0r00                  532 	ldh	(_SCX_REG+0),a
                                    533 ;src\noise.c:113: STAT_REG = 0x44;
      00022C 3E 44                  534 	ld	a, #0x44
      00022E E0r00                  535 	ldh	(_STAT_REG+0),a
      000230 FB                     536 	ei
                                    537 ;src\noise.c:116: set_interrupts(LCD_IFLAG | VBL_IFLAG);
      000231 3E 03                  538 	ld	a, #0x03
      000233 F5                     539 	push	af
      000234 33                     540 	inc	sp
      000235 CDr00r00               541 	call	_set_interrupts
      000238 33                     542 	inc	sp
                                    543 ;src\noise.c:117: DISPLAY_ON;
      000239 F0r00                  544 	ldh	a, (_LCDC_REG+0)
      00023B F6 80                  545 	or	a, #0x80
      00023D E0r00                  546 	ldh	(_LCDC_REG+0),a
                                    547 ;src\noise.c:118: enable_interrupts();
      00023F CDr00r00               548 	call	_enable_interrupts
                                    549 ;src\noise.c:119: }
      000242 E8 0B                  550 	add	sp, #11
      000244 C9                     551 	ret
                                    552 	.area _CODE_4
                                    553 	.area _CABS (ABS)
