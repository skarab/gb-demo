                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module squares_race
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl b_Scene_SquaresRace
                                     12 	.globl _Scene_SquaresRace
                                     13 	.globl _squares_race_lcd
                                     14 	.globl _squares_race_vbl
                                     15 	.globl _squares_race_precalc
                                     16 	.globl _set_palette
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _display_off
                                     20 	.globl _wait_vbl_done
                                     21 	.globl _set_interrupts
                                     22 	.globl _disable_interrupts
                                     23 	.globl _enable_interrupts
                                     24 	.globl _add_LCD
                                     25 	.globl _add_VBL
                                     26 	.globl _race_anim
                                     27 	.globl _squares_precalc_y
                                     28 	.globl _squares_precalc_x
                                     29 	.globl ___bank_squares_race
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
      000000                         37 _squares_precalc_x::
      000000                         38 	.ds 2880
      000B40                         39 _squares_precalc_y::
      000B40                         40 	.ds 2880
      001680                         41 _race_anim::
      001680                         42 	.ds 1
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _DABS (ABS)
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _HOME
                                     51 	.area _GSINIT
                                     52 	.area _GSFINAL
                                     53 	.area _GSINIT
                                     54 ;src\squares_race.c:51: UINT8 race_anim = 0;
      000000 21r80r16                55 	ld	hl, #_race_anim
      000003 36 00                   56 	ld	(hl), #0x00
                                     57 ;--------------------------------------------------------
                                     58 ; Home
                                     59 ;--------------------------------------------------------
                                     60 	.area _HOME
                                     61 	.area _HOME
                                     62 ;--------------------------------------------------------
                                     63 ; code
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE_6
                                     66 ;src\squares_race.c:21: void squares_race_precalc()
                                     67 ;	---------------------------------
                                     68 ; Function squares_race_precalc
                                     69 ; ---------------------------------
      000000                         70 _squares_race_precalc::
      000000 E8 EE                   71 	add	sp, #-18
                                     72 ;src\squares_race.c:23: for (UINT8 i = 0 ; i<race_loop ; ++i)
      000002 AF                      73 	xor	a, a
      000003 F8 11                   74 	ldhl	sp,	#17
      000005 77                      75 	ld	(hl), a
      000006                         76 00111$:
      000006 F8 11                   77 	ldhl	sp,	#17
                                     78 ;src\squares_race.c:25: UINT8 old_size = ((i*race_i_mul)*(i*race_i_mul))/race_divide;
      000008 7E                      79 	ld	a,(hl)
      000009 FE 28                   80 	cp	a,#0x28
      00000B D2r4Br02                81 	jp	NC,00113$
      00000E F8 00                   82 	ldhl	sp,	#0
      000010 77                      83 	ld	(hl), a
      000011 AF                      84 	xor	a, a
      000012 23                      85 	inc	hl
      000013 77                      86 	ld	(hl), a
      000014 C1                      87 	pop	bc
      000015 C5                      88 	push	bc
      000016 69                      89 	ld	l, c
      000017 60                      90 	ld	h, b
      000018 29                      91 	add	hl, hl
      000019 09                      92 	add	hl, bc
      00001A 29                      93 	add	hl, hl
      00001B 29                      94 	add	hl, hl
      00001C E5                      95 	push	hl
      00001D 7D                      96 	ld	a, l
      00001E F8 04                   97 	ldhl	sp,	#4
      000020 77                      98 	ld	(hl), a
      000021 E1                      99 	pop	hl
      000022 7C                     100 	ld	a, h
      000023 F8 03                  101 	ldhl	sp,	#3
      000025 32                     102 	ld	(hl-), a
      000026 2A                     103 	ld	a, (hl+)
      000027 5E                     104 	ld	e, (hl)
      000028 F8 0F                  105 	ldhl	sp,	#15
      00002A 22                     106 	ld	(hl+), a
      00002B 73                     107 	ld	(hl), e
      00002C F8 02                  108 	ldhl	sp,	#2
      00002E 7E                     109 	ld	a, (hl)
      00002F D6 00                  110 	sub	a, #0x00
      000031 23                     111 	inc	hl
      000032 7E                     112 	ld	a, (hl)
      000033 DE 00                  113 	sbc	a, #0x00
      000035 56                     114 	ld	d, (hl)
      000036 3E 00                  115 	ld	a, #0x00
      000038 CB 7F                  116 	bit	7,a
      00003A 28 07                  117 	jr	Z, 00177$
      00003C CB 7A                  118 	bit	7, d
      00003E 20 08                  119 	jr	NZ, 00178$
      000040 BF                     120 	cp	a, a
      000041 18 05                  121 	jr	00178$
      000043                        122 00177$:
      000043 CB 7A                  123 	bit	7, d
      000045 28 01                  124 	jr	Z, 00178$
      000047 37                     125 	scf
      000048                        126 00178$:
      000048 3E 00                  127 	ld	a, #0x00
      00004A 17                     128 	rla
      00004B F8 04                  129 	ldhl	sp,	#4
                                    130 ;c
      00004D 32                     131 	ld	(hl-), a
      00004E 2B                     132 	dec	hl
      00004F 2A                     133 	ld	a, (hl+)
      000050 5F                     134 	ld	e, a
      000051 56                     135 	ld	d, (hl)
      000052 21 07 00               136 	ld	hl, #0x0007
      000055 19                     137 	add	hl, de
      000056 E5                     138 	push	hl
      000057 7D                     139 	ld	a, l
      000058 F8 07                  140 	ldhl	sp,	#7
      00005A 77                     141 	ld	(hl), a
      00005B E1                     142 	pop	hl
      00005C 7C                     143 	ld	a, h
      00005D F8 06                  144 	ldhl	sp,	#6
      00005F 32                     145 	ld	(hl-), a
      000060 2B                     146 	dec	hl
      000061 7E                     147 	ld	a, (hl)
      000062 B7                     148 	or	a, a
      000063 28 07                  149 	jr	Z, 00115$
      000065 23                     150 	inc	hl
      000066 2A                     151 	ld	a, (hl+)
      000067 5E                     152 	ld	e, (hl)
      000068 F8 0F                  153 	ldhl	sp,	#15
      00006A 22                     154 	ld	(hl+), a
      00006B 73                     155 	ld	(hl), e
      00006C                        156 00115$:
      00006C F8 0F                  157 	ldhl	sp,#15
      00006E 2A                     158 	ld	a, (hl+)
      00006F 4F                     159 	ld	c, a
      000070 46                     160 	ld	b, (hl)
      000071 CB 28                  161 	sra	b
      000073 CB 19                  162 	rr	c
      000075 CB 28                  163 	sra	b
      000077 CB 19                  164 	rr	c
      000079 CB 28                  165 	sra	b
      00007B CB 19                  166 	rr	c
      00007D F8 02                  167 	ldhl	sp,#2
      00007F 2A                     168 	ld	a, (hl+)
      000080 5F                     169 	ld	e, a
      000081 2A                     170 	ld	a, (hl+)
      000082 57                     171 	ld	d, a
      000083 7E                     172 	ld	a, (hl)
      000084 B7                     173 	or	a, a
      000085 28 04                  174 	jr	Z, 00116$
      000087 23                     175 	inc	hl
      000088 2A                     176 	ld	a, (hl+)
      000089 5F                     177 	ld	e, a
      00008A 56                     178 	ld	d, (hl)
      00008B                        179 00116$:
      00008B CB 2A                  180 	sra	d
      00008D CB 1B                  181 	rr	e
      00008F CB 2A                  182 	sra	d
      000091 CB 1B                  183 	rr	e
      000093 CB 2A                  184 	sra	d
      000095 CB 1B                  185 	rr	e
      000097 D5                     186 	push	de
      000098 C5                     187 	push	bc
      000099 CDr00r00               188 	call	__mulint
      00009C E8 04                  189 	add	sp, #4
      00009E 21 0C 00               190 	ld	hl, #0x000c
      0000A1 E5                     191 	push	hl
      0000A2 D5                     192 	push	de
      0000A3 CDr00r00               193 	call	__divsint
      0000A6 E8 04                  194 	add	sp, #4
      0000A8 F8 07                  195 	ldhl	sp,	#7
      0000AA 73                     196 	ld	(hl), e
                                    197 ;src\squares_race.c:26: UINT8 s = ((i*race_i_mul)/race_divide)&1;
      0000AB F8 02                  198 	ldhl	sp,#2
      0000AD 2A                     199 	ld	a, (hl+)
      0000AE 4F                     200 	ld	c, a
      0000AF 2A                     201 	ld	a, (hl+)
      0000B0 47                     202 	ld	b, a
      0000B1 7E                     203 	ld	a, (hl)
      0000B2 B7                     204 	or	a, a
      0000B3 28 04                  205 	jr	Z, 00117$
      0000B5 23                     206 	inc	hl
      0000B6 2A                     207 	ld	a, (hl+)
      0000B7 4F                     208 	ld	c, a
      0000B8 46                     209 	ld	b, (hl)
      0000B9                        210 00117$:
      0000B9 CB 28                  211 	sra	b
      0000BB CB 19                  212 	rr	c
      0000BD CB 28                  213 	sra	b
      0000BF CB 19                  214 	rr	c
      0000C1 CB 28                  215 	sra	b
      0000C3 CB 19                  216 	rr	c
      0000C5 21 0C 00               217 	ld	hl, #0x000c
      0000C8 E5                     218 	push	hl
      0000C9 C5                     219 	push	bc
      0000CA CDr00r00               220 	call	__divsint
      0000CD E8 04                  221 	add	sp, #4
      0000CF 7B                     222 	ld	a, e
      0000D0 E6 01                  223 	and	a, #0x01
      0000D2 F8 08                  224 	ldhl	sp,	#8
      0000D4 77                     225 	ld	(hl), a
                                    226 ;src\squares_race.c:28: for (UINT8 j = 0 ; j<72 ; ++j)
      0000D5 0E 00                  227 	ld	c, #0x00
      0000D7                        228 00108$:
      0000D7 79                     229 	ld	a, c
      0000D8 D6 48                  230 	sub	a, #0x48
      0000DA D2r45r02               231 	jp	NC, 00112$
                                    232 ;src\squares_race.c:30: UINT8 square_size = j*2/3 + 16;
      0000DD F8 09                  233 	ldhl	sp,	#9
      0000DF 71                     234 	ld	(hl), c
      0000E0 AF                     235 	xor	a, a
      0000E1 23                     236 	inc	hl
      0000E2 32                     237 	ld	(hl-), a
      0000E3 2A                     238 	ld	a, (hl+)
      0000E4 5F                     239 	ld	e, a
      0000E5 56                     240 	ld	d, (hl)
      0000E6 CB 23                  241 	sla	e
      0000E8 CB 12                  242 	rl	d
      0000EA C5                     243 	push	bc
      0000EB 21 03 00               244 	ld	hl, #0x0003
      0000EE E5                     245 	push	hl
      0000EF D5                     246 	push	de
      0000F0 CDr00r00               247 	call	__divsint
      0000F3 E8 04                  248 	add	sp, #4
      0000F5 C1                     249 	pop	bc
      0000F6 7B                     250 	ld	a, e
      0000F7 C6 10                  251 	add	a, #0x10
      0000F9 F8 0B                  252 	ldhl	sp,	#11
                                    253 ;src\squares_race.c:31: UINT8 p = (j+(i*race_i_mul))/race_divide;
      0000FB 32                     254 	ld	(hl-), a
      0000FC 2B                     255 	dec	hl
      0000FD 2A                     256 	ld	a, (hl+)
      0000FE 5E                     257 	ld	e, (hl)
      0000FF F8 0F                  258 	ldhl	sp,	#15
      000101 22                     259 	ld	(hl+), a
      000102 73                     260 	ld	(hl), e
      000103 F8 02                  261 	ldhl	sp,#2
      000105 2A                     262 	ld	a, (hl+)
      000106 5F                     263 	ld	e, a
      000107 2A                     264 	ld	a, (hl+)
      000108 57                     265 	ld	d, a
      000109 7E                     266 	ld	a, (hl)
      00010A B7                     267 	or	a, a
      00010B 28 04                  268 	jr	Z, 00118$
      00010D 23                     269 	inc	hl
      00010E 2A                     270 	ld	a, (hl+)
      00010F 5F                     271 	ld	e, a
      000110 56                     272 	ld	d, (hl)
      000111                        273 00118$:
      000111 CB 2A                  274 	sra	d
      000113 CB 1B                  275 	rr	e
      000115 CB 2A                  276 	sra	d
      000117 CB 1B                  277 	rr	e
      000119 CB 2A                  278 	sra	d
      00011B CB 1B                  279 	rr	e
                                    280 ;c
      00011D F8 0F                  281 	ldhl	sp,	#15
      00011F 2A                     282 	ld	a, (hl+)
      000120 66                     283 	ld	h, (hl)
      000121 6F                     284 	ld	l, a
      000122 19                     285 	add	hl, de
      000123 5D                     286 	ld	e, l
      000124 54                     287 	ld	d, h
      000125 C5                     288 	push	bc
      000126 21 0C 00               289 	ld	hl, #0x000c
      000129 E5                     290 	push	hl
      00012A D5                     291 	push	de
      00012B CDr00r00               292 	call	__divsint
      00012E E8 04                  293 	add	sp, #4
      000130 C1                     294 	pop	bc
      000131 7B                     295 	ld	a, e
                                    296 ;src\squares_race.c:32: UINT8 psquare_size = p*p;
      000132 C5                     297 	push	bc
      000133 F5                     298 	push	af
      000134 33                     299 	inc	sp
      000135 F5                     300 	push	af
      000136 33                     301 	inc	sp
      000137 CDr00r00               302 	call	__muluchar
      00013A E8 02                  303 	add	sp, #2
      00013C C1                     304 	pop	bc
                                    305 ;src\squares_race.c:34: if (psquare_size!=old_size)
      00013D F8 07                  306 	ldhl	sp,	#7
      00013F 7E                     307 	ld	a, (hl)
      000140 93                     308 	sub	a, e
      000141 28 0B                  309 	jr	Z, 00102$
                                    310 ;src\squares_race.c:36: old_size = psquare_size;
      000143 F8 07                  311 	ldhl	sp,	#7
                                    312 ;src\squares_race.c:37: s = !s;
      000145 7B                     313 	ld	a, e
      000146 22                     314 	ld	(hl+), a
      000147 7E                     315 	ld	a, (hl)
      000148 D6 01                  316 	sub	a,#0x01
      00014A 3E 00                  317 	ld	a, #0x00
      00014C 17                     318 	rla
      00014D 77                     319 	ld	(hl), a
      00014E                        320 00102$:
                                    321 ;src\squares_race.c:40: UINT8 add = 0;
      00014E AF                     322 	xor	a, a
      00014F F8 0C                  323 	ldhl	sp,	#12
      000151 77                     324 	ld	(hl), a
                                    325 ;src\squares_race.c:41: if (s!=0) add = square_size;
      000152 F8 08                  326 	ldhl	sp,	#8
      000154 7E                     327 	ld	a, (hl)
      000155 B7                     328 	or	a, a
      000156 28 04                  329 	jr	Z, 00104$
      000158 F8 0B                  330 	ldhl	sp,	#11
      00015A 2A                     331 	ld	a, (hl+)
      00015B 77                     332 	ld	(hl), a
      00015C                        333 00104$:
                                    334 ;src\squares_race.c:43: UINT8 sin = j*sintable[i*3]/64;
      00015C D1                     335 	pop	de
      00015D D5                     336 	push	de
      00015E 6B                     337 	ld	l, e
      00015F 62                     338 	ld	h, d
      000160 29                     339 	add	hl, hl
      000161 19                     340 	add	hl, de
      000162 11r00r00               341 	ld	de, #_sintable
      000165 19                     342 	add	hl, de
      000166 7E                     343 	ld	a, (hl)
      000167 C5                     344 	push	bc
      000168 47                     345 	ld	b, a
      000169 C5                     346 	push	bc
      00016A CDr00r00               347 	call	__muluchar
      00016D E8 02                  348 	add	sp, #2
      00016F E5                     349 	push	hl
      000170 F8 11                  350 	ldhl	sp,	#17
      000172 73                     351 	ld	(hl), e
      000173 F8 12                  352 	ldhl	sp,	#18
      000175 72                     353 	ld	(hl), d
      000176 E1                     354 	pop	hl
      000177 C1                     355 	pop	bc
      000178 F8 0D                  356 	ldhl	sp,	#13
      00017A 2A                     357 	ld	a, (hl+)
      00017B 5E                     358 	ld	e, (hl)
      00017C 23                     359 	inc	hl
      00017D 22                     360 	ld	(hl+), a
      00017E 73                     361 	ld	(hl), e
      00017F F8 0D                  362 	ldhl	sp,	#13
      000181 7E                     363 	ld	a, (hl)
      000182 D6 00                  364 	sub	a, #0x00
      000184 23                     365 	inc	hl
      000185 7E                     366 	ld	a, (hl)
      000186 DE 00                  367 	sbc	a, #0x00
      000188 56                     368 	ld	d, (hl)
      000189 3E 00                  369 	ld	a, #0x00
      00018B CB 7F                  370 	bit	7,a
      00018D 28 07                  371 	jr	Z, 00181$
      00018F CB 7A                  372 	bit	7, d
      000191 20 08                  373 	jr	NZ, 00182$
      000193 BF                     374 	cp	a, a
      000194 18 05                  375 	jr	00182$
      000196                        376 00181$:
      000196 CB 7A                  377 	bit	7, d
      000198 28 01                  378 	jr	Z, 00182$
      00019A 37                     379 	scf
      00019B                        380 00182$:
      00019B 30 13                  381 	jr	NC, 00119$
                                    382 ;c
      00019D F8 0D                  383 	ldhl	sp,#13
      00019F 2A                     384 	ld	a, (hl+)
      0001A0 5F                     385 	ld	e, a
      0001A1 56                     386 	ld	d, (hl)
      0001A2 21 3F 00               387 	ld	hl, #0x003f
      0001A5 19                     388 	add	hl, de
      0001A6 E5                     389 	push	hl
      0001A7 7D                     390 	ld	a, l
      0001A8 F8 11                  391 	ldhl	sp,	#17
      0001AA 77                     392 	ld	(hl), a
      0001AB E1                     393 	pop	hl
      0001AC 7C                     394 	ld	a, h
      0001AD F8 10                  395 	ldhl	sp,	#16
      0001AF 77                     396 	ld	(hl), a
      0001B0                        397 00119$:
      0001B0 F8 0F                  398 	ldhl	sp,	#15
      0001B2 2A                     399 	ld	a, (hl+)
      0001B3 47                     400 	ld	b, a
      0001B4 5E                     401 	ld	e, (hl)
      0001B5 CB 2B                  402 	sra	e
      0001B7 CB 18                  403 	rr	b
      0001B9 CB 2B                  404 	sra	e
      0001BB CB 18                  405 	rr	b
      0001BD CB 2B                  406 	sra	e
      0001BF CB 18                  407 	rr	b
      0001C1 CB 2B                  408 	sra	e
      0001C3 CB 18                  409 	rr	b
      0001C5 CB 2B                  410 	sra	e
      0001C7 CB 18                  411 	rr	b
      0001C9 CB 2B                  412 	sra	e
      0001CB CB 18                  413 	rr	b
                                    414 ;src\squares_race.c:45: squares_precalc_x[j][i] = (add + j + sin) % (square_size*2);
      0001CD 59                     415 	ld	e, c
      0001CE 16 00                  416 	ld	d, #0x00
      0001D0 6B                     417 	ld	l, e
      0001D1 62                     418 	ld	h, d
      0001D2 29                     419 	add	hl, hl
      0001D3 29                     420 	add	hl, hl
      0001D4 19                     421 	add	hl, de
      0001D5 29                     422 	add	hl, hl
      0001D6 29                     423 	add	hl, hl
      0001D7 29                     424 	add	hl, hl
      0001D8 E5                     425 	push	hl
      0001D9 7D                     426 	ld	a, l
      0001DA F8 0F                  427 	ldhl	sp,	#15
      0001DC 77                     428 	ld	(hl), a
      0001DD E1                     429 	pop	hl
      0001DE 7C                     430 	ld	a, h
      0001DF F8 0E                  431 	ldhl	sp,	#14
      0001E1 77                     432 	ld	(hl), a
                                    433 ;c
      0001E2 11r00r00               434 	ld	de, #_squares_precalc_x
      0001E5 2B                     435 	dec	hl
      0001E6 2A                     436 	ld	a, (hl+)
      0001E7 66                     437 	ld	h, (hl)
      0001E8 6F                     438 	ld	l, a
      0001E9 19                     439 	add	hl, de
      0001EA 5D                     440 	ld	e, l
      0001EB 54                     441 	ld	d, h
                                    442 ;c
      0001EC F8 11                  443 	ldhl	sp,	#17
      0001EE 6E                     444 	ld	l, (hl)
      0001EF 26 00                  445 	ld	h, #0x00
      0001F1 19                     446 	add	hl, de
      0001F2 E5                     447 	push	hl
      0001F3 7D                     448 	ld	a, l
      0001F4 F8 11                  449 	ldhl	sp,	#17
      0001F6 77                     450 	ld	(hl), a
      0001F7 E1                     451 	pop	hl
      0001F8 7C                     452 	ld	a, h
      0001F9 F8 10                  453 	ldhl	sp,	#16
      0001FB 77                     454 	ld	(hl), a
      0001FC F8 0C                  455 	ldhl	sp,	#12
      0001FE 5E                     456 	ld	e, (hl)
      0001FF 16 00                  457 	ld	d, #0x00
                                    458 ;c
      000201 F8 09                  459 	ldhl	sp,	#9
      000203 2A                     460 	ld	a, (hl+)
      000204 66                     461 	ld	h, (hl)
      000205 6F                     462 	ld	l, a
      000206 19                     463 	add	hl, de
      000207 5D                     464 	ld	e, l
      000208 54                     465 	ld	d, h
      000209 68                     466 	ld	l, b
      00020A 26 00                  467 	ld	h, #0x00
      00020C 19                     468 	add	hl, de
      00020D 5D                     469 	ld	e, l
      00020E 54                     470 	ld	d, h
      00020F F8 0B                  471 	ldhl	sp,	#11
      000211 6E                     472 	ld	l, (hl)
      000212 06 00                  473 	ld	b, #0x00
      000214 60                     474 	ld	h, b
      000215 29                     475 	add	hl, hl
      000216 C5                     476 	push	bc
      000217 E5                     477 	push	hl
      000218 D5                     478 	push	de
      000219 CDr00r00               479 	call	__modsint
      00021C E8 04                  480 	add	sp, #4
      00021E C1                     481 	pop	bc
      00021F 43                     482 	ld	b, e
      000220 F8 0F                  483 	ldhl	sp,	#15
      000222 2A                     484 	ld	a, (hl+)
      000223 66                     485 	ld	h, (hl)
      000224 6F                     486 	ld	l, a
      000225 70                     487 	ld	(hl), b
                                    488 ;src\squares_race.c:46: squares_precalc_y[j][i] = (square_size - 16)*4;
                                    489 ;c
      000226 F8 0D                  490 	ldhl	sp,#13
      000228 2A                     491 	ld	a, (hl+)
      000229 5F                     492 	ld	e, a
      00022A 56                     493 	ld	d, (hl)
      00022B 21r40r0B               494 	ld	hl, #_squares_precalc_y
      00022E 19                     495 	add	hl, de
      00022F 5D                     496 	ld	e, l
      000230 54                     497 	ld	d, h
                                    498 ;c
      000231 F8 11                  499 	ldhl	sp,	#17
      000233 6E                     500 	ld	l, (hl)
      000234 26 00                  501 	ld	h, #0x00
      000236 19                     502 	add	hl, de
      000237 5D                     503 	ld	e, l
      000238 54                     504 	ld	d, h
      000239 F8 0B                  505 	ldhl	sp,	#11
      00023B 7E                     506 	ld	a, (hl)
      00023C C6 F0                  507 	add	a, #0xf0
      00023E 87                     508 	add	a, a
      00023F 87                     509 	add	a, a
      000240 12                     510 	ld	(de), a
                                    511 ;src\squares_race.c:28: for (UINT8 j = 0 ; j<72 ; ++j)
      000241 0C                     512 	inc	c
      000242 C3rD7r00               513 	jp	00108$
      000245                        514 00112$:
                                    515 ;src\squares_race.c:23: for (UINT8 i = 0 ; i<race_loop ; ++i)
      000245 F8 11                  516 	ldhl	sp,	#17
      000247 34                     517 	inc	(hl)
      000248 C3r06r00               518 	jp	00111$
      00024B                        519 00113$:
                                    520 ;src\squares_race.c:49: }
      00024B E8 12                  521 	add	sp, #18
      00024D C9                     522 	ret
                           000006   523 ___bank_squares_race	=	0x0006
                                    524 ;src\squares_race.c:53: void squares_race_vbl()
                                    525 ;	---------------------------------
                                    526 ; Function squares_race_vbl
                                    527 ; ---------------------------------
      00024E                        528 _squares_race_vbl::
                                    529 ;src\squares_race.c:55: ++race_anim;
      00024E 21r80r16               530 	ld	hl, #_race_anim
      000251 34                     531 	inc	(hl)
                                    532 ;src\squares_race.c:56: if (race_anim>=race_loop)
      000252 7E                     533 	ld	a, (hl)
      000253 D6 28                  534 	sub	a, #0x28
      000255 D8                     535 	ret	C
                                    536 ;src\squares_race.c:57: race_anim = 8;
      000256 36 08                  537 	ld	(hl), #0x08
                                    538 ;src\squares_race.c:58: }
      000258 C9                     539 	ret
                                    540 ;src\squares_race.c:60: void squares_race_lcd()
                                    541 ;	---------------------------------
                                    542 ; Function squares_race_lcd
                                    543 ; ---------------------------------
      000259                        544 _squares_race_lcd::
      000259 E8 FE                  545 	add	sp, #-2
                                    546 ;src\squares_race.c:62: UINT8 y = LY_REG;
      00025B F0r00                  547 	ldh	a, (_LY_REG+0)
      00025D F8 00                  548 	ldhl	sp,	#0
      00025F 77                     549 	ld	(hl), a
                                    550 ;src\squares_race.c:67: UINT8 ra = race_anim;
      000260 FAr80r16               551 	ld	a, (#_race_anim)
      000263 F8 01                  552 	ldhl	sp,	#1
                                    553 ;src\squares_race.c:64: if (y<30)
      000265 32                     554 	ld	(hl-), a
      000266 7E                     555 	ld	a, (hl)
      000267 D6 1E                  556 	sub	a, #0x1e
      000269 30 39                  557 	jr	NC, 00105$
                                    558 ;src\squares_race.c:66: UINT8 cy = 72-y*2-6;
      00026B 6E                     559 	ld	l, (hl)
      00026C 29                     560 	add	hl, hl
      00026D 3E 42                  561 	ld	a, #0x42
      00026F 95                     562 	sub	a, l
      000270 4F                     563 	ld	c, a
                                    564 ;src\squares_race.c:68: UINT8 sx = squares_precalc_x[cy][ra];
      000271 06 00                  565 	ld	b, #0x00
      000273 69                     566 	ld	l, c
      000274 60                     567 	ld	h, b
      000275 29                     568 	add	hl, hl
      000276 29                     569 	add	hl, hl
      000277 09                     570 	add	hl, bc
      000278 29                     571 	add	hl, hl
      000279 29                     572 	add	hl, hl
      00027A 29                     573 	add	hl, hl
      00027B 4D                     574 	ld	c, l
      00027C 44                     575 	ld	b, h
      00027D 21r00r00               576 	ld	hl, #_squares_precalc_x
      000280 09                     577 	add	hl, bc
      000281 5D                     578 	ld	e, l
      000282 54                     579 	ld	d, h
                                    580 ;c
      000283 F8 01                  581 	ldhl	sp,	#1
      000285 6E                     582 	ld	l, (hl)
      000286 26 00                  583 	ld	h, #0x00
      000288 19                     584 	add	hl, de
      000289 5D                     585 	ld	e, l
      00028A 54                     586 	ld	d, h
      00028B 1A                     587 	ld	a, (de)
      00028C E0r00                  588 	ldh	(_SCX_REG+0),a
                                    589 ;src\squares_race.c:69: UINT8 sy = squares_precalc_y[cy][ra]-y;
      00028E 21r40r0B               590 	ld	hl, #_squares_precalc_y
      000291 09                     591 	add	hl, bc
      000292 4D                     592 	ld	c, l
      000293 44                     593 	ld	b, h
      000294 F8 01                  594 	ldhl	sp,	#1
      000296 6E                     595 	ld	l, (hl)
      000297 26 00                  596 	ld	h, #0x00
      000299 09                     597 	add	hl, bc
      00029A 4D                     598 	ld	c, l
      00029B 44                     599 	ld	b, h
      00029C 0A                     600 	ld	a, (bc)
      00029D F8 00                  601 	ldhl	sp,	#0
      00029F 96                     602 	sub	a, (hl)
      0002A0 E0r00                  603 	ldh	(_SCY_REG+0),a
                                    604 ;src\squares_race.c:71: SCY_REG = sy;
      0002A2 18 4A                  605 	jr	00107$
      0002A4                        606 00105$:
                                    607 ;src\squares_race.c:73: else if (y<80)
      0002A4 F8 00                  608 	ldhl	sp,	#0
      0002A6 7E                     609 	ld	a, (hl)
      0002A7 D6 50                  610 	sub	a, #0x50
      0002A9 30 0C                  611 	jr	NC, 00102$
                                    612 ;src\squares_race.c:75: SCY_REG = -y-10;
      0002AB AF                     613 	xor	a, a
      0002AC 96                     614 	sub	a, (hl)
      0002AD C6 F6                  615 	add	a, #0xf6
      0002AF E0r00                  616 	ldh	(_SCY_REG+0),a
                                    617 ;src\squares_race.c:76: SCX_REG = 0;
      0002B1 3E 00                  618 	ld	a, #0x00
      0002B3 E0r00                  619 	ldh	(_SCX_REG+0),a
      0002B5 18 37                  620 	jr	00107$
      0002B7                        621 00102$:
                                    622 ;src\squares_race.c:80: UINT8 cy = y-80;
      0002B7 F8 00                  623 	ldhl	sp,	#0
      0002B9 7E                     624 	ld	a, (hl)
      0002BA C6 B0                  625 	add	a, #0xb0
      0002BC 4F                     626 	ld	c, a
                                    627 ;src\squares_race.c:82: UINT8 sx = squares_precalc_x[cy][ra];
      0002BD 06 00                  628 	ld	b, #0x00
      0002BF 69                     629 	ld	l, c
      0002C0 60                     630 	ld	h, b
      0002C1 29                     631 	add	hl, hl
      0002C2 29                     632 	add	hl, hl
      0002C3 09                     633 	add	hl, bc
      0002C4 29                     634 	add	hl, hl
      0002C5 29                     635 	add	hl, hl
      0002C6 29                     636 	add	hl, hl
      0002C7 4D                     637 	ld	c, l
      0002C8 44                     638 	ld	b, h
      0002C9 21r00r00               639 	ld	hl, #_squares_precalc_x
      0002CC 09                     640 	add	hl, bc
      0002CD 5D                     641 	ld	e, l
      0002CE 54                     642 	ld	d, h
                                    643 ;c
      0002CF F8 01                  644 	ldhl	sp,	#1
      0002D1 6E                     645 	ld	l, (hl)
      0002D2 26 00                  646 	ld	h, #0x00
      0002D4 19                     647 	add	hl, de
      0002D5 5D                     648 	ld	e, l
      0002D6 54                     649 	ld	d, h
      0002D7 1A                     650 	ld	a, (de)
      0002D8 E0r00                  651 	ldh	(_SCX_REG+0),a
                                    652 ;src\squares_race.c:83: UINT8 sy = squares_precalc_y[cy][ra]-y;
      0002DA 21r40r0B               653 	ld	hl, #_squares_precalc_y
      0002DD 09                     654 	add	hl, bc
      0002DE 4D                     655 	ld	c, l
      0002DF 44                     656 	ld	b, h
      0002E0 F8 01                  657 	ldhl	sp,	#1
      0002E2 6E                     658 	ld	l, (hl)
      0002E3 26 00                  659 	ld	h, #0x00
      0002E5 09                     660 	add	hl, bc
      0002E6 4D                     661 	ld	c, l
      0002E7 44                     662 	ld	b, h
      0002E8 0A                     663 	ld	a, (bc)
      0002E9 F8 00                  664 	ldhl	sp,	#0
      0002EB 96                     665 	sub	a, (hl)
      0002EC E0r00                  666 	ldh	(_SCY_REG+0),a
                                    667 ;src\squares_race.c:85: SCY_REG = sy;
      0002EE                        668 00107$:
                                    669 ;src\squares_race.c:87: }
      0002EE E8 02                  670 	add	sp, #2
      0002F0 C9                     671 	ret
                                    672 ;src\squares_race.c:89: void Scene_SquaresRace() BANKED
                                    673 ;	---------------------------------
                                    674 ; Function Scene_SquaresRace
                                    675 ; ---------------------------------
                           000006   676 	b_Scene_SquaresRace	= 6
      0002F1                        677 _Scene_SquaresRace::
                                    678 ;src\squares_race.c:91: squares_race_precalc();
      0002F1 CDr00r00               679 	call	_squares_race_precalc
                                    680 ;src\squares_race.c:93: disable_interrupts();
      0002F4 CDr00r00               681 	call	_disable_interrupts
                                    682 ;src\squares_race.c:94: DISPLAY_OFF;
      0002F7 CDr00r00               683 	call	_display_off
                                    684 ;src\squares_race.c:96: HIDE_WIN;
      0002FA F0r00                  685 	ldh	a, (_LCDC_REG+0)
      0002FC E6 DF                  686 	and	a, #0xdf
      0002FE E0r00                  687 	ldh	(_LCDC_REG+0),a
                                    688 ;src\squares_race.c:97: set_palette(PALETTE(CWHITE, CSILVER, CGRAY, CBLACK));
      000300 21 E4 00               689 	ld	hl, #0x00e4
      000303 E5                     690 	push	hl
      000304 CDr00r00               691 	call	_set_palette
      000307 E8 02                  692 	add	sp, #2
                                    693 ;src\squares_race.c:98: set_bkg_data(0, squares_zoom_tiledata_count, squares_zoom_tiledata);
      000309 11r00r00               694 	ld	de, #_squares_zoom_tiledata+0
      00030C 21r00r00               695 	ld	hl, #_squares_zoom_tiledata_count
      00030F 2A                     696 	ld	a, (hl+)
      000310 47                     697 	ld	b, a
      000311 4E                     698 	ld	c, (hl)
      000312 D5                     699 	push	de
      000313 C5                     700 	push	bc
      000314 33                     701 	inc	sp
      000315 AF                     702 	xor	a, a
      000316 F5                     703 	push	af
      000317 33                     704 	inc	sp
      000318 CDr00r00               705 	call	_set_bkg_data
      00031B E8 04                  706 	add	sp, #4
                                    707 ;src\squares_race.c:99: set_bkg_tiles(0, 0, 32, 8, squares_zoom_tilemap0);
      00031D 21r00r00               708 	ld	hl, #_squares_zoom_tilemap0
      000320 E5                     709 	push	hl
      000321 11 20 08               710 	ld	de, #0x0820
      000324 D5                     711 	push	de
      000325 AF                     712 	xor	a, a
      000326 F5                     713 	push	af
      000327 33                     714 	inc	sp
      000328 AF                     715 	xor	a, a
      000329 F5                     716 	push	af
      00032A 33                     717 	inc	sp
      00032B CDr00r00               718 	call	_set_bkg_tiles
      00032E E8 06                  719 	add	sp, #6
                                    720 ;src\squares_race.c:100: set_bkg_tiles(0, 8, 32, 8, squares_zoom_tilemap1);
      000330 21r00r00               721 	ld	hl, #_squares_zoom_tilemap1
      000333 E5                     722 	push	hl
      000334 11 20 08               723 	ld	de, #0x0820
      000337 D5                     724 	push	de
      000338 3E 08                  725 	ld	a, #0x08
      00033A F5                     726 	push	af
      00033B 33                     727 	inc	sp
      00033C AF                     728 	xor	a, a
      00033D F5                     729 	push	af
      00033E 33                     730 	inc	sp
      00033F CDr00r00               731 	call	_set_bkg_tiles
      000342 E8 06                  732 	add	sp, #6
                                    733 ;src\squares_race.c:101: set_bkg_tiles(0, 16, 32, 6, squares_zoom_tilemap2);
      000344 21r00r00               734 	ld	hl, #_squares_zoom_tilemap2
      000347 E5                     735 	push	hl
      000348 11 20 06               736 	ld	de, #0x0620
      00034B D5                     737 	push	de
      00034C 3E 10                  738 	ld	a, #0x10
      00034E F5                     739 	push	af
      00034F 33                     740 	inc	sp
      000350 AF                     741 	xor	a, a
      000351 F5                     742 	push	af
      000352 33                     743 	inc	sp
      000353 CDr00r00               744 	call	_set_bkg_tiles
      000356 E8 06                  745 	add	sp, #6
                                    746 ;src\squares_race.c:107: }
      000358 F3                     747 	di
                                    748 ;src\squares_race.c:104: STAT_REG = 0x18;
      000359 3E 18                  749 	ld	a, #0x18
      00035B E0r00                  750 	ldh	(_STAT_REG+0),a
                                    751 ;src\squares_race.c:105: add_VBL(squares_race_vbl);
      00035D 21r4Er02               752 	ld	hl, #_squares_race_vbl
      000360 E5                     753 	push	hl
      000361 CDr00r00               754 	call	_add_VBL
      000364 E8 02                  755 	add	sp, #2
                                    756 ;src\squares_race.c:106: add_LCD(squares_race_lcd);
      000366 21r59r02               757 	ld	hl, #_squares_race_lcd
      000369 E5                     758 	push	hl
      00036A CDr00r00               759 	call	_add_LCD
      00036D E8 02                  760 	add	sp, #2
      00036F FB                     761 	ei
                                    762 ;src\squares_race.c:108: set_interrupts(LCD_IFLAG | VBL_IFLAG);
      000370 3E 03                  763 	ld	a, #0x03
      000372 F5                     764 	push	af
      000373 33                     765 	inc	sp
      000374 CDr00r00               766 	call	_set_interrupts
      000377 33                     767 	inc	sp
                                    768 ;src\squares_race.c:110: DISPLAY_ON;
      000378 F0r00                  769 	ldh	a, (_LCDC_REG+0)
      00037A F6 80                  770 	or	a, #0x80
      00037C E0r00                  771 	ldh	(_LCDC_REG+0),a
                                    772 ;src\squares_race.c:111: enable_interrupts();
      00037E CDr00r00               773 	call	_enable_interrupts
                                    774 ;src\squares_race.c:113: while (1)
      000381                        775 00102$:
                                    776 ;src\squares_race.c:115: wait_vbl_done();		
      000381 CDr00r00               777 	call	_wait_vbl_done
                                    778 ;src\squares_race.c:122: }
      000384 18 FB                  779 	jr	00102$
                                    780 	.area _CODE_6
                                    781 	.area _CABS (ABS)
